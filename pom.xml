<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.example.java</groupId>
	<artifactId>helloworld_microprofile</artifactId>
	<packaging>war</packaging>
	<version>0.1.0</version>

	<parent>
		<groupId>io.openliberty.tools</groupId>
		<artifactId>liberty-maven-app-parent</artifactId>
		<version>3.2.3</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<packaging.type>minify,runnable</packaging.type>
		<liberty.var.HTTP_PORT>9080</liberty.var.HTTP_PORT>
		<liberty.var.HTTPS_PORT>9443</liberty.var.HTTPS_PORT>
		<image.builder>docker</image.builder>
		<image.user>kgibm</image.user>
		<image.name>helloworld_microprofile</image.name>
	</properties>

	<profiles>
		<profile>
			<id>usr-package</id>
			<properties>
				<packaging.type>usr</packaging.type>
			</properties>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>4.0.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile</groupId>
			<artifactId>microprofile</artifactId>
			<version>4.0</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.microprofile.health</groupId>
			<artifactId>microprofile-health-api</artifactId>
			<version>3.0</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>jakarta.platform</groupId>
			<artifactId>jakarta.jakartaee-api</artifactId>
			<version>8.0.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5.13</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.7.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-extension-providers</artifactId>
			<version>3.4.3</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>3.4.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<packagingExcludes>pom.xml</packagingExcludes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>io.openliberty.tools</groupId>
				<artifactId>liberty-maven-plugin</artifactId>
				<configuration>
					<assemblyArtifact>
						<groupId>io.openliberty</groupId>
						<artifactId>openliberty-runtime</artifactId>
						<version>[21.0.0.4,)</version>
						<type>zip</type>
					</assemblyArtifact>
					<serverName>${project.artifactId}Server</serverName>
					<include>${packaging.type}</include>
					<mergeServerEnv>true</mergeServerEnv>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<systemPropertyVariables>
						<HTTP_PORT>${liberty.var.HTTP_PORT}</HTTP_PORT>
						<HTTPS_PORT>${liberty.var.HTTPS_PORT}</HTTPS_PORT>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>package</phase>
						<configuration>
							<target>

								<!-- exec: https://ant.apache.org/manual/Tasks/exec.html -->

								<!-- Get the git commit hash and put it into a variable for the next 
									command -->
								<exec dir="${project.basedir}" executable="git"
									failonerror="true" outputproperty="commit.id">
									<arg line="rev-parse HEAD" />
								</exec>

								<!-- Run docker/podman build -->
								<exec dir="${project.basedir}"
									executable="${image.builder}" failonerror="true">
									<arg
										line="build -t ${image.user}/${image.name}:${project.version} --build-arg VERSION=${project.version} --build-arg REVISION=${commit.id} ." />
								</exec>

								<echo
									message="Created ${image.user}/${image.name}:${project.version} with VERSION=${project.version} REVISION=${commit.id}" />

								<echo
									message="docker run --rm -p ${liberty.var.HTTP_PORT}:${liberty.var.HTTP_PORT} -p ${liberty.var.HTTPS_PORT}:${liberty.var.HTTPS_PORT} -it ${image.user}/${image.name}:${project.version}" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
